const createPet = async (newPet, petType, router) => {
  const allowedPetTypes = ["dogs", "cats"];
  if (!allowedPetTypes.includes(petType)) {
    console.error(`Invalid pet type: ${petType}`);
    return;
  }
  try {
    const res = await authAxios.post(`/posts/${petType}/`, newPet);
    console.log(res);
    router.push(`/${petType}`);
    getPets();
  } catch (e) {
    console.log(e);
  }
};

// const refreshToken = storageGetItem("refreshToken");
      // const accessToken = storageGetItem("accessToken");

      // const response = await authAxios.post(
      //   "/account/refresh/",
      //   {
      //     refresh_token: refreshToken,
      //   },
      //   {
      //     headers: {
      //       Authorization: `Bearer ${storageGetItem("refreshToken")}`,
      //     },
      //   }
      // );



    images:{id: 3, image: "http://35.246.210.249/media/images/testimonial.png", name: 14}
